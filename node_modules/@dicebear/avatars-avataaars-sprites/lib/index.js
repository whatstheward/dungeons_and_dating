"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const server_1 = require("react-dom/server");
const avataaars_1 = __importDefault(require("avataaars"));
const getAvatarStyle_1 = __importDefault(require("./utils/getAvatarStyle"));
const getTopType_1 = __importDefault(require("./utils/getTopType"));
const getAccessoriesType_1 = __importDefault(require("./utils/getAccessoriesType"));
const getHatColor_1 = __importDefault(require("./utils/getHatColor"));
const getHairColor_1 = __importDefault(require("./utils/getHairColor"));
const getFacialHairType_1 = __importDefault(require("./utils/getFacialHairType"));
const getFacialHairColor_1 = __importDefault(require("./utils/getFacialHairColor"));
const getClotheType_1 = __importDefault(require("./utils/getClotheType"));
const getClotheColor_1 = __importDefault(require("./utils/getClotheColor"));
const getEyeType_1 = __importDefault(require("./utils/getEyeType"));
const getEyebrowType_1 = __importDefault(require("./utils/getEyebrowType"));
const getMouthType_1 = __importDefault(require("./utils/getMouthType"));
const getSkinColor_1 = __importDefault(require("./utils/getSkinColor"));
function default_1(random, options = {}) {
    let jsx = (React.createElement(avataaars_1.default, { avatarStyle: getAvatarStyle_1.default(options), topType: getTopType_1.default(options, random), accessoriesType: getAccessoriesType_1.default(options, random), 
        // @ts-ignore
        hatColor: getHatColor_1.default(options, random), hairColor: getHairColor_1.default(options, random), facialHairType: getFacialHairType_1.default(options, random), facialHairColor: getFacialHairColor_1.default(options, random), clotheType: getClotheType_1.default(options, random), clotheColor: getClotheColor_1.default(options, random), eyeType: getEyeType_1.default(options, random), eyebrowType: getEyebrowType_1.default(options, random), mouthType: getMouthType_1.default(options, random), skinColor: getSkinColor_1.default(options, random) }));
    let rendered = server_1.renderToStaticMarkup(jsx);
    if (options.background && options.style === 'circle') {
        rendered.replace('mask="url(#mask-2)" fill="#65C9FF"', `mask="url(#mask-2)" fill="${options.background}"`);
        options.background = undefined;
    }
    return rendered
        .replace('width="264px"', '')
        .replace('height="280px"', '')
        .replace('viewBox="0 0 264 280"', 'viewBox="-8 0 280 280"');
}
exports.default = default_1;
//# sourceMappingURL=index.js.map