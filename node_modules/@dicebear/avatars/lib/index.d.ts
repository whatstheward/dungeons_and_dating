/// <reference types="../typings/svgson" />
import Random from './random';
import Color from './color';
export declare type Options = {
    radius?: number;
    base64?: boolean;
    width?: number | string;
    height?: number | string;
    margin?: number;
    background?: string;
    userAgent?: string;
};
export declare type SpriteCollection<O = {}> = (random: Random, options?: O) => string | svgson.schema;
export default class Avatars<O> {
    static random: typeof Random;
    static color: typeof Color;
    protected spriteCollection: SpriteCollection<O>;
    protected defaultOptions?: O & Options;
    /**
     * @param spriteCollection
     */
    constructor(spriteCollection: SpriteCollection<O>, defaultOptions?: O & Options);
    /**
     * Creates an avatar
     *
     * @param seed
     */
    create(seed: string, options?: O & Options): string;
    private isGroupable;
    private base64EncodeUnicode;
}
